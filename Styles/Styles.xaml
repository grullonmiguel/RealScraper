<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options">

    <!--#region Constants -->
    <sys:Double x:Key="Fonts.Small">12</sys:Double>
    <sys:Double x:Key="Fonts.Medium">14</sys:Double>
    <sys:Double x:Key="Fonts.Large">18</sys:Double>
    <sys:Double x:Key="Fonts.XLarge">22</sys:Double>
    <sys:Double x:Key="Fonts.XXLarge">26</sys:Double>
    <sys:Double x:Key="Fonts.XXXLarge">32</sys:Double>
    <!--#endregion-->

    <!--#region Colors/Brushes -->
    <Color x:Key="Theme.AccentColorPrimary">#FF3A4A86</Color>
    <SolidColorBrush x:Key="Brushes.AccentPrimary" Color="{StaticResource Theme.AccentColorPrimary}" options:Freeze="True" />

    <Color x:Key="Theme.AccentColorSecondary">#FF676767</Color>
    <SolidColorBrush x:Key="Brushes.AccentSecondary" Color="{StaticResource Theme.AccentColorSecondary}" options:Freeze="True" />

    <Color x:Key="Theme.AccentColorTertiary">#FF2B3866</Color>
    <SolidColorBrush x:Key="Brushes.AccentTertiary" Color="{StaticResource Theme.AccentColorTertiary}" options:Freeze="True" />

    <SolidColorBrush x:Key="Theme.Showcase" Color="#333A4A86" options:Freeze="True" />

    <Color A="225" R="0" G="0" B="0" x:Key="Colors.Dialog" />
    <SolidColorBrush x:Key="Brushes.Dialog" Color="{StaticResource Colors.Dialog}"/>

    <Color x:Key="Theme.ContrastColorPrimary">#FF448343</Color>
    <SolidColorBrush x:Key="Brushes.ContrastPrimary" Color="{StaticResource Theme.ContrastColorPrimary}" options:Freeze="True" />

    <!--#endregion-->

    <!--#region  Bitmaps -->
    <BitmapImage x:Key="Bitmaps.Start" UriSource="Images/RealScraper.png" />
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlockStyle">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{StaticResource Fonts.Medium}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlocks.Description"  BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource Fonts.XXLarge}" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlocks.Hyperlink" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource Fonts.Small}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Foreground" Value="{StaticResource Brushes.AccentTertiary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--endregion-->

    <!--#region Texbox-->
    
    <Style TargetType="TextBox" x:Key="Textbox.Dark">
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#40000000"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource Fonts.Small}"/>
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- Hover Effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#60000000"/>
                </Trigger>

                <!-- Focus Effect -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Foreground" Value="#222222"/>
                    <Setter Property="Background" Value="#E3F2FD"/>
                    <!-- Light Blue -->
                </Trigger>
            </Style.Triggers>
        </Style>

    <!--#endregion-->
    
    <!--#region Button -->
    <Style x:Key="Buttons.Base" TargetType="{x:Type Button}" >
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource Fonts.Medium}" />
        <Setter Property="Background" Value="{DynamicResource Brushes.AccentPrimary}" />
    </Style>
    <Style x:Key="Buttons.Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource Buttons.Base}">
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Background" Value="{DynamicResource Brushes.AccentPrimary}"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        Padding="4,2" 
                        CornerRadius="4"  
                        BorderThickness="0" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Secondary" TargetType="{x:Type Button}" BasedOn="{StaticResource Buttons.Base}">
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource Theme.Showcase}"/>
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="#FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        Padding="4,2" 
                        CornerRadius="4"  
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
                            <Setter Property="Background" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Brushes.AccentTertiary}"/>
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Settings" TargetType="Button" >
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Width="32" Height="32">
                        <Border Padding="2" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <Path Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" 
                                  Fill="{TemplateBinding Background}" Width="24" Height="24" />

                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Hyperlink" TargetType="Button" BasedOn="{x:Null}" >
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource Fonts.Small}" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock x:Name="tb" Text="{TemplateBinding Content}" TextDecorations="None" FontSize="{TemplateBinding FontSize}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="tb" Property="Text" Value="No URL Provided"/>
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="tb" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Edit" TargetType="Button" >
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="ToolTip" Value="Edit"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Width="{TemplateBinding Width}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{TemplateBinding Foreground}" 
                                  Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                            </Canvas>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource Theme.Showcase}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Save" TargetType="Button" >
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="ToolTip" Value="Save"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Width="{TemplateBinding Width}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{TemplateBinding Foreground}" 
                                      Data="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" />
                            </Canvas>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource Theme.Showcase}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Buttons.Close" TargetType="Button" >
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="ToolTip" Value="Close"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Width="{TemplateBinding Width}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{TemplateBinding Foreground}" 
                                      Data="M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z" />
                            </Canvas>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource Theme.Showcase}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Grid -->
    <Style x:Key="Grids.Background" TargetType="Grid">
        <Setter Property="Background" Value="#448343" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <TranslateTransform x:Name="SlideTransform" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DisplaySettings}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Fade-In Animation -->
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 From="0" To="1" Duration="0:0:5.2"/>

                            <!-- Slide-In Animation -->
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                 From="20" To="0" Duration="0:0:5.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region Datagrid -->
    <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="0.8" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{StaticResource Brushes.AccentPrimary}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGrid">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="HorizontalGridLinesBrush" Value="#CECECE"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="{StaticResource Fonts.Small}"/>
    </Style>
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0.8"/>
        <Setter Property="Foreground" Value="{StaticResource Brushes.AccentPrimary}" />
        <Setter Property="Width" Value="40"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="FontSize" Value="{StaticResource Fonts.Small}" />
        <Setter Property="Background" Value="{StaticResource Theme.Showcase}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}" />
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentPrimary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0.8"/>
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontSize" Value="{StaticResource Fonts.Medium}" />
        <Setter Property="Background" Value="{StaticResource Brushes.AccentPrimary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Showcase}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <!-- Content-->
                            <ContentPresenter Margin="4 2" VerticalAlignment="Center" />
                            <!-- Arrow -->
                            <Path x:Name="arrow" Visibility="Hidden"
                                  Data="M0,0 L1,0 0.5,1 z" Grid.Column="1"
                                  Fill="#FFFFFF" Margin="0 0 8 0" Width="24" Height="24"
                                  VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentSecondary}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="arrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="arrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource Fonts.Medium}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="4 2" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Theme.Showcase}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brushes.AccentTertiary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region ContentControl -->
    <Style TargetType="ContentControl" x:Key="AnimatedContentControl">
        <Setter Property="Opacity" Value="0"/>
        <!-- Start hidden -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Fade-In Animation -->
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.6"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>

            <!-- Fade-Out Animation -->
            <Trigger Property="Visibility" Value="Hidden">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.6"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>